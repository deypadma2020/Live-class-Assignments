{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOJTKG+tXky2NFIy+l+mGyM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Python String Manipulation"],"metadata":{"id":"wNSHoQljyjXk"}},{"cell_type":"markdown","source":["1. Count the number of times `iNeuron` appears in the string.\n","```python\n","text = \"Welcome to iNeuron, You are a part of FSDS Bootcamp 2 in iNeuron. I hope you are enjoying the course by iNeuron\"\n","```"],"metadata":{"id":"m5ZGQv05ymX2"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZPnokDTayIV1","executionInfo":{"status":"ok","timestamp":1665318426768,"user_tz":-330,"elapsed":496,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"ee24282b-c626-4ae4-bd89-e99d3c406bc9"},"outputs":[{"output_type":"stream","name":"stdout","text":["The number of times iNeuron appears in the assigned string is -  3\n"]}],"source":["# Assigned string value\n","text = \"Welcome to iNeuron, You are a part of FSDS Bootcamp 2 in iNeuron. I hope you are enjoying the course by iNeuron\"\n","\n","# Counting the number of specified string\n","print(f\"The number of times iNeuron appears in the assigned string is - \",text.count(\"iNeuron\"))"]},{"cell_type":"markdown","source":["2. Check if position `5` to `11` ends with the phrase `iNeuron.` in the string \n","```python\n","txt = \"Hello, welcome to FSDS 2.0 at iNeuron.\"\n","```"],"metadata":{"id":"mAUTEobrzy0W"}},{"cell_type":"code","source":["# Assigned string value\n","txt = \"Hello, welcome to FSDS 2.0 at iNeuron.\"\n","\n","substring = \"iNeuron.\"\n","\n","s = txt.split()\n","print(\"The given text in the form of list - \",s)\n","\n","print(f\"Whether the given text is end with '{substring}' [true/ false]? \",txt.endswith(\"iNeuron.\"))\n","print(\"Extracting only the phrase of position 5 to 11 - \",txt[4:11])\n","\n","# Checking the position of specified phrase\n","if substring in s:\n","  print(f\"Yes, the substring '{txt}'- exists in the given phrase.\")\n","\n","  if txt.endswith(\"iNeuron.\") and txt[4:11]:\n","    print(f'''\"{txt}\" - ends with \"iNeuron.\"''')\n","  else:\n","    print(f'''\"{txt}\" - does not end with with \"iNeuron.\"''')\n","\n","else:\n","  print(f\"No, the substring '{txt}' does not exist in the given phrase.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e8CsHWcNz0mT","executionInfo":{"status":"ok","timestamp":1665402404343,"user_tz":-330,"elapsed":6,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"a8b01b11-0906-4d59-cd46-b8c75cf94fb6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The given text in the form of list -  ['Hello,', 'welcome', 'to', 'FSDS', '2.0', 'at', 'iNeuron.']\n","Whether the given text is end with 'iNeuron.' [true/ false]?  True\n","Extracting only the phrase of position 5 to 11 -  o, welc\n","Yes, the substring 'Hello, welcome to FSDS 2.0 at iNeuron.'- exists in the given phrase.\n","\"Hello, welcome to FSDS 2.0 at iNeuron.\" - ends with \"iNeuron.\"\n"]}]},{"cell_type":"markdown","source":["3. Write a program that takes your full name as input and displays the abbreviations of the first and middle names except the last name which is displayed as it is. For example, if your name is Sunny Bhaveen Chandra, then the output should be S.B.Chandra."],"metadata":{"id":"6SNeWuxk2Dhy"}},{"cell_type":"code","source":["# Taking the user input\n","name = input(\"Please enter your full name: \")\n","\n","# User input converting into proper case\n","name = name.title()\n","\n","# Triming if there is any space\n","name = name.strip()\n","\n","# every letter of the that dumping into a list by delimiter\n","list = name.split(\" \")\n","\n","print(f\"The title case of your name is {name}\\n\")\n","\n","print(f\"After transform the input value into a list - {list}\\n\")\n","\n","print(\"The short form of your name is - \",list[0][0],list[1][0],list[2])\n","# print(\"The short form of your name is - \",list[0][0],list[1][0],list[2][0])\n","# print(\"The short form of your name is - \",list[0][0],list[0][1],list[0][2])\n","# print(\"The short form of your name is - \",list[0],list[1],list[2])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XhCgtG462FXh","executionInfo":{"status":"ok","timestamp":1665319871600,"user_tz":-330,"elapsed":15613,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"c22d6a59-a82a-4f0a-b0a4-c33929a09988"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Please enter your full name: padma dey panta\n","The title case of your name is Padma Dey Panta\n","\n","After transform the input value into a list - ['Padma', 'Dey', 'Panta']\n","\n","The short form of your name is -  P D Panta\n","The short form of your name is -  P D P\n","The short form of your name is -  P a d\n","The short form of your name is -  Padma Dey Panta\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"wEPhmdEHfiIk"}},{"cell_type":"code","source":["name = \"Sunny Bhavin Chandra\"\n","first_name, middle_name, sir_name = name.split(\" \")\n","\n","print(f\"\"\" {first_name[0]}.{middle_name[0]}.{sir_name}\n","\"\"\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"21Vw9XOWfjA0","executionInfo":{"status":"ok","timestamp":1666187188695,"user_tz":-330,"elapsed":10,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"49c8c134-ca77-49c9-e072-bc2d7125b5e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" S.B.Chandra\n","\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"NeaLSI4QfnIZ"}},{"cell_type":"markdown","source":["4. Join all items in a list into a string, using a hash(`#`) character as separator:\n","```python\n","LIST = [\"My\", \"name\", \"is\", \"Rishav\", \"Dash\"]\n","```"],"metadata":{"id":"fkrPX3N92GD4"}},{"cell_type":"code","source":["# The given list\n","LIST = [\"My\", \"name\", \"is\", \"Rishav\", \"Dash\"]\n","\n","# Printing the list, as a sentence with delimiter '#'\n","print(f\"After join with '#' in the {LIST} - \\n\",\"#\".join(LIST))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sJzJn0W02MCp","executionInfo":{"status":"ok","timestamp":1665307556356,"user_tz":-330,"elapsed":649,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"7bb95b2a-d0ce-48df-b68e-ed84972d4883"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["After join with '#' in the ['My', 'name', 'is', 'Rishav', 'Dash'] - \n"," My#name#is#Rishav#Dash\n"]}]},{"cell_type":"markdown","source":["5. Write example for the following string manipulation function,\n","\n","  ```\n","  - isdecimal()\n","  - islower()\n","  - isupper()\n","  - isalpha()\n","  - isnumeric()\n","\n","  ```"],"metadata":{"id":"QybTgDg43cu2"}},{"cell_type":"code","source":["# Taking the user input\n","a = input(\"Please enter a value: \")\n","\n","print()\n","\n","# Checking the different types of string manipulation functions\n","print(f\"1) Your input value {a}, whether it is decimal? \",a.isdecimal())\n","print(f\"2) Your input value {a}, whether it is in lower case? \",a.islower())\n","print(f\"3) Your input value {a}, whether it is in upper case? \",a.isupper())\n","print(f\"4) Your input value {a}, whether it is alphabet? \",a.isalpha())\n","print(f\"5) Your input value {a}, whether it is numeric? \",a.isnumeric())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RxQJndbL3eSN","executionInfo":{"status":"ok","timestamp":1665306833369,"user_tz":-330,"elapsed":8107,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"f81815d9-0227-4001-fe81-7dffee3c2bce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Please enter a value: AS21\n","\n","1) Your input value AS21, whether it is decimal?  False\n","2) Your input value AS21, whether it is in lower case?  False\n","3) Your input value AS21, whether it is in upper case?  True\n","4) Your input value AS21, whether it is alphabet?  False\n","5) Your input value AS21, whether it is numeric?  False\n"]}]},{"cell_type":"markdown","source":["6. Indian PAN card format follows the following formats - \n","    - `AYEPC7894X`\n","    - `ABCDE9999Y`\n","  Take user input for PAN_CARD and validate as per the above example."],"metadata":{"id":"eeciKNhW5MwU"}},{"cell_type":"code","source":["# Taking user input for Indian PAN Card no.\n","pan_numbers = input(\"Please enter your PAN Number[ex- ABCDE9999Y]: \")\n","\n","# Checking whether the PAN number is valid\n","if pan_numbers.isalnum() and len(pan_numbers)==10 and pan_numbers.isupper():\n","  print(f\"The PAN number is valid\")\n","\n","else:\n","  print(\"Invalid input\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rplzF8Bc97sT","executionInfo":{"status":"ok","timestamp":1670521821102,"user_tz":-330,"elapsed":23870,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"2ca5978f-a436-4c18-84ae-05889ced6a9d"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Please enter your PAN Number[ex- ABCDE9999Y]: DSER8958MK\n","The PAN number is valid\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"vk_lkNNAgKbk"}},{"cell_type":"code","source":["pan_number = input()\n","\n","if pan_number[0:5].isupper() and pan_number[5:9].isdigit() and pan_number[9].isupper() and len(pan_number)==10:\n","  print(f\"user input is correct: {pan_number} \")\n","else:\n","  print(\"invalid input\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2Mhv8A_gLkI","executionInfo":{"status":"ok","timestamp":1666187335081,"user_tz":-330,"elapsed":15544,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"962d4edf-aee1-4487-82d6-b15be975169a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ABCDE9999Y\n","user input is correct: ABCDE9999Y \n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"BNLUrcxhgTHs"}}]}