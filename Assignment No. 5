{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOU2Bc1EsOcvQ5af7AFycQR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# List, Tuple and Sets"],"metadata":{"id":"f2NW8pjSUn4A"}},{"cell_type":"markdown","source":["## 1. On amazon website we have the following available items - \n","\n","```python\n","amazon_website = [(\"watch\", 5000), (\"phone\", 10000), (\"laptop\", 50000), (\"shirt\", 1000)]\n","```\n","Take the user input N no. of times and find out the total cost to be paid?\n","\n","OR\n","\n","You can ask the user quntity or the count of item?\n","\n","if the item is not present in the amazon website then print that item as out of stock and do add it total\n","\n","\n","HINT: while, for loop.. indexing"],"metadata":{"id":"tlQxZOHUUwSx"}},{"cell_type":"code","source":["# List of item details in the amazon website(\"item_name\", amount) \n","amazon_website = [(\"watch\", 5000), (\"phone\", 10000), (\"laptop\", 50000), (\"shirt\", 1000)]\n","\n","# The list of items changed into dictionary\n","d = dict(amazon_website)\n","\n","print(\"Available items in Amazon website - \")\n","\n","# Printing name of the items and there price\n","for x, y in d.items():\n","  print(f\"Name of the item: {x} | Price: {y}\")\n","\n","print()\n","\n","# Taking initially the total cost '0'\n","total_cost = 0\n","print(f\"empty cart: {total_cost}\")\n","\n","print()\n","print(\"***********************************************\")\n","\n","# Creating an empty list\n","list_of_item = list()\n","\n","while True:\n","\n","  # Taking the user input, which user want to purchase\n","  user_input = input(\"Enter the item that you want to purchase: \")\n","  user_input = user_input.lower()\n","\n","  # Taking the user input, how much user want to purchase\n","  quantity = int(input(\"enter the quantity: \"))\n","\n","  # One by one the use input updating into the previously created empty list\n","  list_of_item = list_of_item + [user_input]\n","  print(\"The list of the purchased item is: \",list_of_item)\n","\n","  for item in amazon_website:\n","\n","    # If user input & the items listed by amazon is same\n","    if item[0] == user_input:\n","      print(\"Detail of the item: \",item)\n","\n","      # Calculating the total cost of listed items, which user have prepared\n","      total_cost = total_cost + (item[1] * quantity)\n","      print(f\"cart after adding {item[0]}: {total_cost}\\n\")\n","\n","  if input(\"Would you like to add one more item in your cart? (yes/no): \") == 'no':\n","\n","    print()\n","    print(\"***********************************************\")\n","\n","    print(f'The payable amount: {total_cost}')\n","\n","    break\n","\n","print(\"Thank You! Visit Again...\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9PkdWLsDhnSw","executionInfo":{"status":"ok","timestamp":1666195813827,"user_tz":-330,"elapsed":151409,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"a526eef0-72d1-4124-8e46-08bc44fdc1b3"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Available items in Amazon website - \n","Name of the item: watch | Price: 5000\n","Name of the item: phone | Price: 10000\n","Name of the item: laptop | Price: 50000\n","Name of the item: shirt | Price: 1000\n","\n","empty cart: 0\n","\n","***********************************************\n","Enter the item that you want to purchase: Shirt\n","enter the quantity: 8\n","The list of the purchased item is:  ['shirt']\n","Detail of the item:  ('shirt', 1000)\n","cart after adding shirt: 8000\n","\n","Would you like to add one more item in your cart? (yes/no): yes\n","Enter the item that you want to purchase: watch\n","enter the quantity: 3\n","The list of the purchased item is:  ['shirt', 'watch']\n","Detail of the item:  ('watch', 5000)\n","cart after adding watch: 23000\n","\n","Would you like to add one more item in your cart? (yes/no): yes\n","Enter the item that you want to purchase: PHONE\n","enter the quantity: 3\n","The list of the purchased item is:  ['shirt', 'watch', 'phone']\n","Detail of the item:  ('phone', 10000)\n","cart after adding phone: 53000\n","\n","Would you like to add one more item in your cart? (yes/no): yes\n","Enter the item that you want to purchase: LaPtoP\n","enter the quantity: 2\n","The list of the purchased item is:  ['shirt', 'watch', 'phone', 'laptop']\n","Detail of the item:  ('laptop', 50000)\n","cart after adding laptop: 153000\n","\n","Would you like to add one more item in your cart? (yes/no): no\n","\n","***********************************************\n","The payable amount: 153000\n","Thank You! Visit Again...\n"]}]},{"cell_type":"markdown","source":["#### 2. What will be the output of the following code snippet?\n","\n","```\n","arr = [1, 2, 3, 4, 5, 6]\n","for i in range(1, 6):\n","    arr[i - 1] = arr[i]\n","for i in range(0, 6): \n","    print(arr[i], end = \" \")\n","```"],"metadata":{"id":"xiJ4BIo6VF-e"}},{"cell_type":"code","source":["# given list of numbers\n","arr = [1, 2, 3, 4, 5, 6]\n","\n","print(\"The type of given 'arr': \",type(arr))\n","\n","print()\n","print(\"***********************************************\")\n","\n","# 1st block\n","print(\"** Iteration starts from '1' -\\n\")\n","for i in range(1, 6):\n","  print(\"The itteration value: \",i)\n","  arr[i - 1] = arr[i]\n","  print(f\"The value of arr[i - 1]: {arr[i - 1]},\\nThe value of arr[i]: {arr[i]}\\n\")\n","\n","print(\"***********************************************\")\n","\n","# 2nd block\n","print(\"** Iteration starts from '0' -\\n\")\n","for i in range(0, 6):\n","  print(arr[i], end = \" \")\n","\n","#2 3 4 5 6 6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VvvltYRaVHyb","executionInfo":{"status":"ok","timestamp":1666195037438,"user_tz":-330,"elapsed":1055,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"e25c9c97-a671-4837-8941-47fbbef03325"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["The type of given 'arr':  <class 'list'>\n","\n","***********************************************\n","** Iteration starts from '1' -\n","\n","The itteration value:  1\n","The value of arr[i - 1]: 2,\n","The value of arr[i]: 2\n","\n","The itteration value:  2\n","The value of arr[i - 1]: 3,\n","The value of arr[i]: 3\n","\n","The itteration value:  3\n","The value of arr[i - 1]: 4,\n","The value of arr[i]: 4\n","\n","The itteration value:  4\n","The value of arr[i - 1]: 5,\n","The value of arr[i]: 5\n","\n","The itteration value:  5\n","The value of arr[i - 1]: 6,\n","The value of arr[i]: 6\n","\n","***********************************************\n","** Iteration starts from '0' -\n","\n","2 3 4 5 6 6 "]}]},{"cell_type":"markdown","source":["#### 3. Write a Python program to find the repeated items of a tuple."],"metadata":{"id":"9zkHZV9MVMs4"}},{"cell_type":"code","source":["# Randomly selected numbers in a tuple\n","tup = (1,22,13,5,11,8,4,5,31,6,7,2,3,22,5)\n","print(\"The type of the 'tup' is: \",type(tup))\n","print()\n","\n","# Creating an empty list\n","l = list()\n","\n","print(\"***********************************************\")\n","\n","# Checking for duplicate items\n","for i in tup:\n","  if tup.count(i) > 1:\n","    print(f\"Repeated item {i}\")\n","    l.append(i)\n","    print(\"After adding one repeated item - \",l)\n","    print()\n","\n","print(\"***********************************************\")\n","\n","# Checking for how many times appeared the listed duplicate items\n","for i in set(l):\n","  print(f\"count of {i} is: \",l.count(i))\n","\n","print()\n","\n","print(\"**The distinct repeated elements of the tuple are: \",set(l))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GaFmlVeaVXm4","executionInfo":{"status":"ok","timestamp":1666194868043,"user_tz":-330,"elapsed":624,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"c35e98d2-499f-4af3-f287-32202153ab12"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["The type of the 'tup' is:  <class 'tuple'>\n","\n","***********************************************\n","Repeated item 22\n","After adding one repeated item -  [22]\n","\n","Repeated item 5\n","After adding one repeated item -  [22, 5]\n","\n","Repeated item 5\n","After adding one repeated item -  [22, 5, 5]\n","\n","Repeated item 22\n","After adding one repeated item -  [22, 5, 5, 22]\n","\n","Repeated item 5\n","After adding one repeated item -  [22, 5, 5, 22, 5]\n","\n","***********************************************\n","count of 5 is:  3\n","count of 22 is:  2\n","\n","**The distinct repeated elements of the tuple are:  {5, 22}\n"]}]},{"cell_type":"markdown","source":["### 4. Replace last value of tuples in a list with 500. Try using list comprehension\n","\n","Example -: \n","```\n","Input -:\n","\n","[(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","\n","Output -:\n","[(10, 20, 500), (40, 50, 500), (70, 80, 500)]\n","\n","\n","```\n"],"metadata":{"id":"jrfex2w8VYJ1"}},{"cell_type":"code","source":["# List of tuples\n","tup = [(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","print(\"The type of 'tup' is: \",type(tup))\n","\n","print()\n","print(\"***********************************************\")\n","\n","for t in tup:\n","  print(\"The first two element of the tuple: \",[t[:-1]])\n","  print(\"After replacing the last element by (500), the tuple is: \",[t[:-1] + (500,)])\n","\n","  print()\n","  \n","print(\"***********************************************\")\n","\n","print([t[:-1] + (500,) for t in tup])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wx-X3ZYoEI23","executionInfo":{"status":"ok","timestamp":1666194938283,"user_tz":-330,"elapsed":820,"user":{"displayName":"Padma Dey","userId":"04161716402767628731"}},"outputId":"fdf7e757-60e8-461c-d1a8-3a01791e4a4a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["The type of 'tup' is:  <class 'list'>\n","\n","***********************************************\n","The first two element of the tuple:  [(10, 20)]\n","After replacing the last element by (500), the tuple is:  [(10, 20, 500)]\n","\n","The first two element of the tuple:  [(40, 50)]\n","After replacing the last element by (500), the tuple is:  [(40, 50, 500)]\n","\n","The first two element of the tuple:  [(70, 80)]\n","After replacing the last element by (500), the tuple is:  [(70, 80, 500)]\n","\n","***********************************************\n","[(10, 20, 500), (40, 50, 500), (70, 80, 500)]\n"]}]}]}